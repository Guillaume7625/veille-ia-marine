name: build

on:
  workflow_dispatch:
  schedule:
    - cron: "25 5 * * *"  # tous les jours 05:25 UTC (à adapter)

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show requirements
        run: |
          echo "=== .github/workflows/requirements.txt ==="
          cat .github/workflows/requirements.txt || true

      - name: Upgrade pip and install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

      - name: Cache Argos models
        uses: actions/cache@v4
        with:
          path: ~/.local/share/argos-translate
          key: argos-${{ runner.os }}-v1

      - name: Ensure Argos EN→FR model installed
        env:
          # ne pas échouer si offline ou déjà installé
          PYTHONUNBUFFERED: "1"
        run: |
          python - <<'PY'
          try:
              from argostranslate import package, translate
              # Déjà installé ?
              langs = translate.get_installed_languages()
              have = False
              for l in langs:
                  for tr in l.translations:
                      if tr.from_code == "en" and tr.to_code == "fr":
                          have = True
                          break
              if not have:
                  print("Installing Argos EN->FR package…")
                  package.update_package_index()
                  packages = package.get_available_packages()
                  pkg = next(p for p in packages if p.from_code == "en" and p.to_code == "fr")
                  download_path = pkg.download()
                  package.install_from_path(download_path)
                  print("✅ Argos EN->FR installed")
              else:
                  print("✅ Argos EN->FR already installed")
          except Exception as e:
              print(f"⚠️ Argos model install skipped/failed: {e}")
          PY

      - name: Run generator
        env:
          OFFLINE_TRANSLATION: "1"
          DAYS_WINDOW: "45"
          RELEVANCE_MIN: "0.28"
        run: |
          python veille_ia.py

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages
