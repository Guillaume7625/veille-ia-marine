name: build

on:
  push:
    branches: ["main"]
  schedule:
    - cron: "17 */6 * * *"   # toutes les 6h
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show requirements
        run: |
          echo "=== .github/workflows/requirements.txt ==="
          cat .github/workflows/requirements.txt || true
          echo "========================================="

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

      - name: Cache Argos models
        uses: actions/cache@v4
        with:
          path: ~/.local/share/argos-translate
          key: Linux-argos-cache-v1

      - name: Install Argos EN→FR model (if missing)
        run: |
          python - <<'PY'
          import sys
          from pathlib import Path
          print("⇣ Vérification/installation modèle Argos EN→FR…")
          try:
              import argostranslate.package as pkg
              import argostranslate.translate as tr
              # déjà installé ?
              langs = tr.get_installed_languages()
              en = next((l for l in langs if l.code=="en"), None)
              fr = next((l for l in langs if l.code=="fr"), None)
              if en and fr:
                  print("✅ Modèle déjà installé")
                  sys.exit(0)
              # sinon installer via l'index officiel
              pkg.update_package_index()
              available = pkg.get_available_packages()
              pair = next((p for p in available if p.from_code=="en" and p.to_code=="fr"), None)
              if not pair:
                  raise RuntimeError("Pair en→fr introuvable dans l'index Argos")
              path = pair.download()
              pkg.install_from_path(path)
              print("✅ Modèle Argos EN→FR installé")
          except Exception as e:
              print(f"⚠️ Impossible d'installer le modèle EN→FR : {e}")
              # on ne fail pas : le pipeline continue, la trad sera désactivée
              pass
          PY

      - name: Run veille
        env:
          DAYS_WINDOW: "45"            # fenêtre glissante (jours)
          RELEVANCE_MIN: "0.40"        # seuil de pertinence (0–1)
          OFFLINE_TRANSLATION: "1"     # 1 = activer la traduction EN→FR
          MAX_SUMMARY_CHARS: "300"
        run: |
          python veille_ia.py

      - name: Upload artifact (rapport)
        uses: actions/upload-artifact@v4
        with:
          name: rapport-html
          path: docs/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
